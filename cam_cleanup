#!/bin/sh

days_delete=180  # six months
days_clean=120   # four months
basedir=/share/media/Cameras

usage() {
  echo "usage: ${0##*/} [-h|-d|-t|-v] [-m] [-D DAYS_DELETE] [-C DAYS_CLEAN] [-l location]"
  echo "	-h		: This help text"
  echo "	-d		: Print debugging information"
  echo "	-t		: Print files to be deleted; do not delete"
  echo "	-v		: Print variables and exit"
  echo "	-m		: Move instead of delete (move to $basedir/deleted)"
  echo "	-D DAYS_DELETE	: Remove ALL videos older than DAYS_DELETE (default: $days_delete; 0: don't delete)"
  echo "	-C DAYS_CLEAN	: Remove non-activity videos older than DAYS_CLEAN (default: $days_clean; 0: don't clean)"
  echo "	-l location	: Camera location (default: $basedir)"
  exit 1
}

debug=0
dotest=0
move=0
verbose=0

while getopts ":hdtvmD:C:l:" opt; do
  case $opt in
    d)
      debug=1
      ;;
    t)
      dotest=1
      ;;
    m)
      move=1
      ;;
    D)
      printf "$OPTARG" | grep -Eq "^[0-9]+$" || { echo "Error: Value for DAYS_DELETE must be an integer"; exit 1; }
      days_delete=$OPTARG
      ;;
    C)
      printf "$OPTARG" | grep -Eq "^[0-9]+$" || { echo "Error: Value for DAYS_CLEAN must be an integer"; exit 1; }
      days_clean=$OPTARG
      ;;
    l)
      basedir=$OPTARG
      ;;
    v)
      verbose=1
      ;;
    h|\?) usage
      ;;
  esac
done
shift $((OPTIND -1))

if [ $days_delete != 0 ] && [ $days_delete -lt $days_clean ]; then
  echo "Warning: No directories will be cleaned because DAYS_DELETE is less than DAYS_CLEAN"
  sleep 5
fi

if [ $debug = 1 -o $verbose = 1 ]; then
  [ $debug = 1 ] && printf "DEBUG: "
  echo "dotest='$dotest'"
  [ $debug = 1 ] && printf "DEBUG: "
  echo "move='$move'"
  [ $debug = 1 ] && printf "DEBUG: "
  echo "days_delete='$days_delete'"
  [ $debug = 1 ] && printf "DEBUG: "
  echo "days_clean='$days_clean'"
  [ $debug = 1 ] && printf "DEBUG: "
  echo "basedir='$basedir'"
  [ $verbose = 1 ] && exit
fi

for cam in $basedir/*cam; do
  [ ! -d $cam ] && continue
  [ $debug = 1 ] && echo "DEBUG: Processing $cam"

    # Starting at DAYS_DELETE, delete the directory, increment and delete the next older
    # Until a directory doesn't exist with that date string
  if [ $days_delete != 0 ]; then
    stophere=0
    day=$days_delete
    while [ $stophere = 0 ]; do
      deletepoint=$(date -d "$day days ago" "+%Y%m%d")
      [ -d $cam/$deletepoint ] && [ $debug = 1 ] && echo "DEBUG: Deleting $cam/$deletepoint"
      if [ ! -d $cam/$deletepoint ]; then
        stophere=1
      else
        if [ $move = 1 ]; then
          destdir=$basedir/deleted/$(basename $cam)
          mkdir -p $destdir
          [ $debug = 1 ] && echo "DEBUG: Moving $cam/$deletepoint to $destdir"
          [ $dotest = 0 ] && mv $cam/$deletepoint $destdir
        else
          [ $debug = 1 ] && echo "DEBUG: Deleting $cam/$deletepoint"
          [ $dotest = 0 ] && rm -Rf $cam/$deletepoint
        fi
      fi
      day=$((day + 1))  # One day older
    done
  fi

  # Starting at DAYS_CLEAN, delete all "P" files (no activity) unless they preceed or
  # follow an "A" file (activity)
  if [ $days_clean != 0 ]; then
    stophere=0
    day=$days_clean
    while [ $stophere = 0 ]; do
      # Reset loop variables
      skipnext=0
      unset previous
      unset delete_list
      deletepoint=$(date -d "$day days ago" "+%Y%m%d")
      [ -d $cam/$deletepoint ] && [ $debug = 1 ] && echo "DEBUG: Cleaning $cam/$deletepoint"
      if [ ! -d $cam/$deletepoint ]; then
        stophere=1
      else
        [ $debug = 1 ] && echo "DEBUG: Processing $cam/$deletepoint/*.mp4"

        for file in $(/bin/ls -1 $cam/$deletepoint/*.mp4 | sort -n 2> /dev/null); do
          # If "A" file, remove previous from delete_list and skip the next file
          if echo "$file" | grep -q "_A\.mp4$"; then
            [ $debug = 1 ] && echo "DEBUG: Not adding $file to delete_list"
            if [ -n "$previous" ]; then
              old_dl="$delete_list"
              delete_list=$(echo "$delete_list" | sed "s^ $previous^^")
              [ "$old_dl" != "$delete_list" ] && [ $debug = 1 ] && echo "DEBUG: Removing $previous from delete_list"
            fi
            skipnext=1
          # If previous file was an "A" file, skip (but reset skipnext)
          elif [ $skipnext = 1 ]; then
            [ $debug = 1 ] && echo "DEBUG: Not adding $file to delete_list"
            skipnext=0
          # Add "P" file to delete_list
          else
            [ $debug = 1 ] && echo "DEBUG: Adding $file to delete_list"
            delete_list="$delete_list $file"
          fi
          previous=$file
        done

        [ -n "$delete_list" ] && [ $debug = 1 ] && echo "DEBUG: Cleaning files: $delete_list"
        if [ $move = 1 ]; then
          destdir=$basedir/deleted/$(basename $cam)/$deletepoint
          [ $debug = 1 ] && echo "DEBUG: Moving files to $destdir"
          if [ $dotest = 0 ]; then
            mkdir -p $destdir
            mv $delete_list $destdir
          fi
        else
          [ $debug = 1 ] && echo "DEBUG: Deleting files"
          [ $dotest = 0 ] && rm $delete_list
        fi

        day=$((day + 1))
      fi
    done
  fi
done

